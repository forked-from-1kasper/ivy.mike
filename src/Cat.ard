
\import Path

\record precategory
  (carrier : \Type)
  (hom : \Pi (x y : carrier) -> \Type)
  (id : \Pi (x : carrier) -> hom x x)
  (c : \Pi (x y z : carrier) (h : hom x y) (w : hom y z) -> hom x z)
  (homSet : \Pi (x y : carrier) -> isSet (hom x y))
  (left : \Pi (x y : carrier) (f : hom x y) -> Path (hom x y) (c x x y (id x) f) f)
  (right : \Pi (x y : carrier) (f : hom x y) -> Path (hom x y) (c x y y f (id y)) f)
  (assoc : \Pi (x y z w : carrier) (f : hom x y) (g : hom y z) (h : hom z w) ->
    Path (hom x w) (c x z w (c x y z f g) h) (c x y w f (c y z w g h)))

\record iso
  (C : precategory)
  (A : C.carrier)
  (B : C.carrier)
  (f : C.hom A B)
  (g : C.hom B A)
  (section : (C.c A B A f g) = (C.id A))
  (recract : (C.c B A B g f) = (C.id B))

\func isCategory (C : precategory) : \Type
   => \Pi (A : C.carrier) -> isContr (\Sigma (B : C.carrier) (iso C A B))

\func category : \Type
   => \Sigma (C : precategory) (isCategory C)

\func isInitial (C : precategory) (bot : C.carrier) : \Type
   => \Pi (x : C.carrier) -> isContr (C.hom bot x)

\func isTerminal (C : precategory) (top : C.carrier) : \Type
   => \Pi (x : C.carrier) -> isContr (C.hom x top)

\func initial (C : precategory) : \Type
   => \Sigma (bot : C.carrier) (isInitial C bot)

\func terminal (C : precategory) : \Type
   => \Sigma (top : C.carrier) (isTerminal C top)

\func isComm (X : precategory) (A B C D : X.carrier)
       (f : X.hom A B) (g : X.hom C D)
       (h : X.hom A C) (i : X.hom B D) : \Type
   => Path (X.hom A D) (X.c A C D h g)
                       (X.c A B D f i)

\record isCatGroupoid
  (carrier : \Type)
  (hom : \Pi (x y : carrier) -> \Type)
  (id : \Pi (x : carrier) -> hom x x)
  (c : \Pi (x y z : carrier) -> hom x y -> hom y z -> hom x z)
  (inv : \Pi (x y : carrier) -> hom x y -> hom y x)
  (inv_left : \Pi (x y : carrier) (p : hom x y) -> Path (hom x x) (c x y x p (inv x y p)) (id x))
  (inv_right : \Pi (x y : carrier) (p : hom x y) -> Path (hom y y) (c y x y (inv x y p) p) (id y))
  (left : \Pi (x y : carrier) (f : hom x y) -> Path (hom x y) (c x x y (id x) f) f)
  (right : \Pi (x y : carrier) (f : hom x y) -> Path (hom x y) (c x y y f (id y)) f)
  (assoc : \Pi (x y z w : carrier) (f : hom x y) (g : hom y z) (h : hom z w) ->
    Path (hom x w) (c x z w (c x y z f g) h) (c x y w f (c y z w g h)))

