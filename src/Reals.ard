
\import Proto \import Path \import Int

\data R
   | elem Int
   | glue-step (x : Int) (i : I) \elim i {
      | left => elem x
      | right => elem (isuc x)
   }

\func R-step (x : Int) : elem x = elem (isuc x)
   => path (glue-step x)

\func R-pos-elem-contr (x : Nat) : elem izero = elem (pos x) \elim x
   | 0 => refl (elem izero)
   | suc x => R-pos-elem-contr x # R-step (pos x)

\func R-neg-elem-contr (x : Nat) : elem izero = elem (neg x) \elim x
   | 0 => refl (elem izero)
   | suc x => R-neg-elem-contr x # inv (R-step (neg (suc x)))

\func R-elem-contr (x : Int) : elem izero = elem x \elim x
   | pos x => R-pos-elem-contr x
   | neg x => R-neg-elem-contr x

\func R2 => tuple R R