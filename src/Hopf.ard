\import Connection
\import Equiv
\import Iso
\import Proto
\import S1
\import Path
\import Univ
\import Susp

\func S2 : \Type => Susp S1

\func isContrSingl {A : \Type} (a : A) : isContr (singl A a)
   => ((a, rfl), \lam z => contr z.2)

\func idEquiv (A : \Type) : A <~> A => (idfun, isContrSingl)

\func Square {A : \Type} {a b c d : A}
             (u : a = b) (v : c = d) (p : a = c) (q : b = d)
   => Path (\lam i => u @ i = v @ i) p q