\import Connection
\import Equiv
\import Iso
\import Proto
\import S1
\import Path
\import Univ

\data susp (A : \Type)
  | north
  | south
  | merid (a : A) (i : I) \elim i {
    | left => north
    | right => south
  }

\func S2 : \Type => susp S1

\func isContrSingl (A : \Type) (a : A) : isContr (singl A a) => ((a, (refl a)), (\lam (z : singl A a) => contr A a z.1 z.2))

\func idEquiv (A : \Type) : A <~> A => (\lam (x : A) => x, isContrSingl A)

\func Square {A : \Type} {a b c d : A}
             (u : a = b) (v : c = d) (p : a = c) (q : b = d)
  => Path (\lam i => u @ i = v @ i) p q